{
  "timestamp": "2024-11-18T09:52:21.169710",
  "error_type": "FragmentHandledException",
  "error_message": "Could not convert string '67,409.1726,258.60713,996.99429,007.36217,686.96436,800.9019,159.280　47,651.00016,241.0005,548.2551,666.00077,601.3642,105.27010,225.7306,718.00012,231.09348,504.00052,721.29234,712.07422,803.75627,416.989' to numeric",
  "traceback": "Traceback (most recent call last):\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/streamlit/runtime/fragment.py\", line 248, in wrapped_fragment\n    result = non_optional_func(*args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/streamlit/elements/dialog_decorator.py\", line 99, in dialog_content\n    _ = non_optional_func(*args, **kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/macpro2/Desktop/Minitab/utils/tools/UTIL.py\", line 179, in cal\n    run()\n  File \"/Users/macpro2/Desktop/Minitab/func/basic/descriptive_statistics.py\", line 120, in descriptive_statistics_run\n    descriptive_statistics_cal(df)\n  File \"/Users/macpro2/Desktop/Minitab/func/basic/descriptive_statistics.py\", line 31, in descriptive_statistics_cal\n    print_txts.append(f'평균 : {round(df[col].mean(), 3)}')\n                                      ^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/pandas/core/series.py\", line 6549, in mean\n    return NDFrame.mean(self, axis, skipna, numeric_only, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/pandas/core/generic.py\", line 12420, in mean\n    return self._stat_function(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/pandas/core/generic.py\", line 12377, in _stat_function\n    return self._reduce(\n           ^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/pandas/core/series.py\", line 6457, in _reduce\n    return op(delegate, skipna=skipna, **kwds)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/pandas/core/nanops.py\", line 147, in f\n    result = alt(values, axis=axis, skipna=skipna, **kwds)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/pandas/core/nanops.py\", line 404, in new_func\n    result = func(values, axis=axis, skipna=skipna, mask=mask, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/pandas/core/nanops.py\", line 720, in nanmean\n    the_sum = _ensure_numeric(the_sum)\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/pandas/core/nanops.py\", line 1701, in _ensure_numeric\n    raise TypeError(f\"Could not convert string '{x}' to numeric\")\nTypeError: Could not convert string '67,409.1726,258.60713,996.99429,007.36217,686.96436,800.9019,159.280　47,651.00016,241.0005,548.2551,666.00077,601.3642,105.27010,225.7306,718.00012,231.09348,504.00052,721.29234,712.07422,803.75627,416.989' to numeric\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/macpro2/Desktop/Minitab/error_handler.py\", line 75, in wrapper\n    main_func()\n  File \"/Users/macpro2/Desktop/Minitab/app.py\", line 156, in main\n    display_content(tabs)\n  File \"/Users/macpro2/Desktop/Minitab/app.py\", line 129, in display_content\n    display_func()\n  File \"/Users/macpro2/Desktop/Minitab/utils/tools/BASIC.py\", line 40, in display_basic_statistics\n    menu(anlysis=cal_func, plot=plot_func, run=run_func)\n  File \"/Users/macpro2/Desktop/Minitab/utils/tools/UTIL.py\", line 81, in menu\n    cal(anlysis, plot, run)\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/streamlit/elements/dialog_decorator.py\", line 112, in wrap\n    fragmented_dialog_content()\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/streamlit/runtime/fragment.py\", line 280, in wrap\n    return wrapped_fragment()\n           ^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Caskroom/miniconda/base/lib/python3.12/site-packages/streamlit/runtime/fragment.py\", line 265, in wrapped_fragment\n    raise FragmentHandledException(e)\nstreamlit.errors.FragmentHandledException: Could not convert string '67,409.1726,258.60713,996.99429,007.36217,686.96436,800.9019,159.280　47,651.00016,241.0005,548.2551,666.00077,601.3642,105.27010,225.7306,718.00012,231.09348,504.00052,721.29234,712.07422,803.75627,416.989' to numeric\n",
  "context": {
    "user_id": "",
    "user_name": "",
    "current_tab": "기술통계",
    "session_state": {
      "tabs_": "기술통계",
      "new_col_name_13": "col14",
      "colors": "[[53, 172, 221], [254, 49, 65], [0, 0, 0], [29, 68, 186]]",
      "measurement": "None",
      "descriptive_statistics_selected": "['평균', '표준편차', '최소값', '최대값']",
      "id": "",
      "new_col_name_6": "col7",
      "degree": "1",
      "new_col_name_2": "3월",
      "descriptive_statistics_col": "1월",
      "col_name": "['col1', 'col2', 'col3', 'col4', 'col5', 'col6', 'col7', 'col8', 'col9', 'col10', 'col11', 'col12', 'col13', 'col14', 'col15']",
      "new_col_name_10": "col11",
      "number_of_columns": "15",
      "factor_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "new_col_name_4": "col5",
      "design": "Empty DataFrame\nColumns: []\nIndex: []",
      "anova_w_inter_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "test_type": "None",
      "lambd": "X",
      "histogram": "False",
      "num_factors": "2",
      "name": "",
      "target": "None",
      "equal_var": "False",
      "y_label": "",
      "new_col_name_12": "col13",
      "diag_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "X_for_opt": "Empty DataFrame\nColumns: []\nIndex: []",
      "color_8": "None",
      "color_9": "None",
      "sample1": "None",
      "equation": "",
      "k": "6",
      "color_4": "None",
      "process_data_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "uniq_col": "col1",
      "anova_wo_inter_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "color_5": "None",
      "DB": "",
      "number_of_rows": "10000",
      "title": "",
      "color_6": "None",
      "save": "DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(5, 2), _props={'delta_type': 'button', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5, 2), _index=1), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5,), _index=8), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')))",
      "new": "DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(5, 6), _props={'delta_type': 'button', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5, 6), _index=1), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5,), _index=8), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')))",
      "interactions": "[]",
      "color_7": "None",
      "alternative": "",
      "significance_level": "0.05",
      "history": "DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(5, 1), _props={'delta_type': 'button', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5, 1), _index=1), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5,), _index=8), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')))",
      "pop_std": "None",
      "coding_type": "None",
      "whole_plot_factors": "1",
      "residuals": "정규 잔차",
      "std_comp_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "option": "None",
      "current_values": "None",
      "anov_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "operator": "None",
      "Del": "DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(5, 4), _props={'delta_type': 'button', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5, 4), _index=1), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5,), _index=8), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')))",
      "blocks": "1",
      "new_col_name_11": "col12",
      "lsl": "None",
      "new_col_name_1": "2월",
      "sample2": "None",
      "new_col_name_8": "col9",
      "null_diff": "0.0",
      "sigma_level": "0.0",
      "var_selection": "None",
      "correlation": "None",
      "color_2": "None",
      "overall_capt_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "X": "Empty DataFrame\nColumns: []\nIndex: []",
      "ndc": "None",
      "replicates": "1",
      "run": "DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(5, 5), _props={'delta_type': 'button', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5, 5), _index=1), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5,), _index=8), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')))",
      "new_col_name_0": "1월",
      "login": "DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(5, 0), _props={'delta_type': 'empty', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5, 0), _index=1), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5,), _index=8), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')))",
      "rename": "DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(5, 3), _props={'delta_type': 'empty', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5, 3), _index=1), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5,), _index=8), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')))",
      "new_col_name_5": "col6",
      "model": "None",
      "fraction": "full",
      "boxplot": "False",
      "predictor": "['col2']",
      "new_col_name_7": "col8",
      "new_col_name_14": "col15",
      "color_1": "None",
      "reg_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "subplot_replicates": "1",
      "coeff_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "new_col_name_9": "col10",
      "part": "None",
      "subgroup_size": "1",
      "tolerance": "None",
      "within_capt_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "upload": "DeltaGenerator(_provided_cursor=LockedCursor(_parent_path=(5, 7), _props={'delta_type': 'empty', 'add_rows_metadata': None}), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5, 7), _index=1), _parent=DeltaGenerator(_provided_cursor=RunningCursor(_parent_path=(5,), _index=8), _parent=DeltaGenerator(), _block_type='horizontal', _form_data=FormData(form_id='')), _block_type='column', _form_data=FormData(form_id='')))",
      "center_points": "0",
      "change_df_data": "{'edited_rows': {}, 'added_rows': [], 'deleted_rows': []}",
      "var_comp_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "x_label": "",
      "new_col_name_3": "col4",
      "use_blocks": "False",
      "usl": "None",
      "perf_df": "Empty DataFrame\nColumns: []\nIndex: []",
      "number_of_newClick": "0",
      "whole_plot_replicates": "2",
      "color_3": "None"
    }
  }
}